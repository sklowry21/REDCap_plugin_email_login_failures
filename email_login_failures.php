<?php
/**
 * PLUGIN NAME: email_login_failures.php
 * DESCRIPTION: This reports on login failures for people with too many failures in 25 hours
 * VERSION:     1.0
 * AUTHOR:      Sue Lowry - University of Minnesota
 */

// REDCap authentication not applicable
define("NOAUTH", true);
// Call the REDCap Connect file in the main "redcap" directory
require_once "../redcap_connect.php";

// Set the variable for number of hours ago to check
$hours_ago = 25;
// Set the variable for number of failures to consider too many
$too_many = 6;

// Read debugLog flag
$debugLog = false;
#$debugLog = true;
if ($debugLog) { LogWrite(""); }
if ($debugLog) LogWrite("hours_ago: $hours_ago, too_many: $too_many");

function LogWrite($logText) {
    $logFile = dirname(__FILE__). DIRECTORY_SEPARATOR . "email_login_failures.log";

    if ($fd = @fopen($logFile, "a") ) {
        fwrite($fd, date("Y-m-d H:i:s",time()) . ": $logText " . PHP_EOL);
        fclose($fd);
    }
}

if ($debugLog) foreach ($_GET as $key => $value) { LogWrite("GET['$key']=" . $value); }
if ($debugLog) foreach ($_POST as $key => $value) { LogWrite("POST['$key']=" . $value); }

// Find incomplete training that is 3, 8, 13, ... days old and still incomplete
$sql = sprintf( "
select log_view_id, ts, user, event, ip, full_url
  from redcap_log_view 
 where event like 'LOGIN%s'
   and ts >= date_sub(now(), interval %d hour)
   and user in (select user
                  from redcap_log_view 
                 where event = 'LOGIN_FAIL'
                   and ts >= date_sub(now(), interval %d hour)
                   and user > ''
                 group by user
                 having count(*) >= %d 
                )
order by user, ts desc
", "%", $hours_ago, $hours_ago, $too_many);
if ($debugLog) LogWrite("SQL:$sql");
// execute the sql statement
$result = $conn->query( $sql );
if ( ! $result )  // sql failed
{
	LogWrite("Could not execute SQL: \n$sql\n\n " . mysqli_error($conn));
	exit;
}
if ( mysqli_num_rows($result) == 0 ) {
    LogWrite("There is nothing to report.");
    exit;
} else {
    LogWrite("There are ".mysqli_num_rows($result)." records to report on.");
}

// - create the "report" for each person
// - email the "report" to the person and to the admins

$today = date("Y-m-d");
$email_table = '<table border=1 cellpadding=5 cellspacing=0>';

// We need to first output the header row
$email_table .= "<tr><td>log_view_id</td><td>ts</td><td>user</td><td>event</td><td>ip</td><td>full_url</td></tr>\n";
$cnt = 0;
// Now output the data
while ($record = $result->fetch_assoc( ))
{
    $email_table .= "<tr><td>".$record['log_view_id']."</td><td>".$record['ts']."</td>".
          "<td>".$record['user']."</td>".
          "<td>".$record['event']."</td>".
          "<td>".$record['ip']."</td>".
          "<td>".$record['full_url']."</td></tr>\n";
    $cnt += 1;
}
$email_table .= "</table>\n";
if ($debugLog) LogWrite("email_table: $email_table");

$r = mySendEmail("Sue Lowry <sklowry@umn.edu>", "REDCap login failures",
  "There were some login failures in REDCap that you might want to check on:<br/>
  <br/>
  $email_table
  <br/>");
if ($debugLog) LogWrite("Goodbye");


function mySendEmail($to, $subject, $body, $cc, $bcc) {
    if ($debugLog) LogWrite( "to: $to, cc: $cc");
#$to = 'sklowry@umn.edu';
#LogWrite( "now to: $to, cc: $cc");
    if ($debugLog) LogWrite( "subject: $subject");
    $from = 'Sue Lowry <sklowry@umn.edu>';
    $emailContents = "
            <html><body style='font-family:Arial;font-size:10pt;'>
            [This message was automatically generated by REDCap]<br /><br />
            $body
            </body>
            </html>";
/*

    $email = new Message ();
    $email->setTo($to);
    $email->setFrom($from);
    $email->setSubject($subject);
    $email->setBody($emailContents);
    if (!$email->send()) {
        LogWrite("Could not send email");
    }
*/
    $headers  = "MIME-Version: 1.0" . "\n";
    $headers .= "From: " . $from . "\n";
    if ($cc != "") $headers .= "Cc:"  . $cc . "\n";
    if ($bcc != "") $headers .= "Bcc:"  . $bcc . "\n";
    $headers .= "Reply-To: " . $from . "\n";
    $headers .= "Return-Path: " . $from . "\n";
    $headers .= "Content-type: text/html; charset=utf-8\n";
    $headers .= "Content-Transfer-Encoding: base64\n";
    // Use base-64 encode and other methods for content and subject to deal with encoding issues
    $content = rtrim(chunk_split(base64_encode($body)));
    $subject = '=?UTF-8?B?'.substr(base64_encode($subject), 0, 240).'?=';
    // Return boolean if sent or not
    return mail($to, $subject, $content, $headers, "-f " . $from);
}

